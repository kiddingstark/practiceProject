<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	<!--
		框架搭建：1.web.xml为全局配置文件，加载applicationContext相关xml并配置Spingmvc的dispatcherServlet
				2.Spingmvc.xml配置视图解析器、Handler等
				3.applicationContext-dao.xml配置数据源与mybatis整合
				4.applicationContext-transaction.xml配置事务，也要注入数据源
	-->
	<context:property-placeholder location="classpath:db.properties" />
	<context:component-scan base-package="com.ahong.*"></context:component-scan>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="30" />
		<property name="maxIdle" value="5" />
	</bean>

	<!--
		原理：sqlsessionFactoryBuilder读取配置文件，通过builder模式构建sqlsessionFactory，由sqlsessionFactory获得sqlsession
			sqlsession相当于JDBC中的Connection
			sqlsession作用:1.获取mapper。
							2.发送SQL.
							3.控制事务

			例：SqlSession sqlSession = sqlsessionFactory.openSession();
				UserMapper userMapper = sqlsession.getMapper(UserMapper.calss);
				userMapper.findAllUser();
	-->

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 加载mybatis的全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml" />
	</bean>
	<!-- mapper扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描包路径，如果需要扫描多个包，中间使用半角逗号隔开 -->
		<property name="basePackage" value="com.ahong.mapper"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
</beans>